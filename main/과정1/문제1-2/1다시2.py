from flask import Flask
app = Flask(__name__)
@app.route("/")                                 # 이 함수는 홈페이지('/')랑 연결돼있어. 누가 '/'로 들어오면 이 함수를 실행해!

def hello_world():
    return "Hello,Devops!"
if __name__ == "__main__":
    app.run(host="0.0.0.0", port=8081)



# __name__ 은 파이썬이 자동으로 만들어주는 변수.
# 이 파일이 직접 실행되는 파일이면, __name__ == "__main__" 이 됨.
# Flask는 내부적으로 템플릿 폴더 등을 찾을 때, 어디서 실행되고 있는지를 알아야함
# 그래서  __name__을 넘겨주면 현재 이 앱의 위치를 파악할 수 있음.
# "내가ㅏ 누구인지 알아야 나중에 내 짐(템플릿 등)을 어디에 뒀는지 찾을 수 있잖아?"

# @app.route("/")
# def hello_world():
#     return "Hello, DevOps!"          에 대해 알아보자
### @ -> 데코레이터라 불림    어떤 함수에 특별한 역할을 추가하는 문법 
# 여기서 @app.route("/")는 hello_world 함수에 "이건 라우트야" 라는 태그를 붙이는 것.
# 웹 브라우저가 "/" 주소로 접속하면 Flask는 "어라, 이 함수가 이 주소랑 연결돼 있었네?" 하고 실행시킴.
#### ' . ' 이 의미하는 것은
# "app이라는 객체 안에 있는 route 기능을 사용한 거야"
# ' . '은 어떤 객체 안의 속성이나 기능에 접근한다는 의미
# app.route는 Flask가 가진 '주소 연결 기능'을 부른거임.